{"ast":null,"code":"import { all, put, select, takeLatest } from 'redux-saga/effects'; // importe de redux-saga/effects\n\nimport { addSuccess, cartAmountUpdateSuccess } from '../store/actions'; // importar de store/actions\n\n/* ### métodos para redux saga que funcionam por trás dos panos na aplicação aos quais você queira ###\r\n** ### que funcione junto aos componentes como Home, Cart e ShowCart ###\r\n**/\n// representa o BACK-END. Caso queira para a produção, desconsidere esse objeto booksjson caso queira um banco de dados real\n\nconst booksjson = [{\n  id: 1,\n  title: 'Bolsa Louis Vuitton',\n  price: 2.676,\n  img: 'https://cdn.upcatalogo.com.br/img/sites/540/2021/02/1-10.jpg'\n}, {\n  id: 2,\n  title: 'Camisa Supreme-LouisVuitton',\n  price: 549.99,\n  img: 'https://cdn.awsli.com.br/800x800/1081/1081393/produto/40933337/blusa-moletom-capuz-supreme-hype-swag-branco-peep-trap-rap-f75ccd99.jpg'\n}, {\n  id: 3,\n  title: 'Pulma Edição Limitada',\n  price: 365.85,\n  img: 'https://t-static.dafiti.com.br/Lz-z1xUY_UReE9_SKLSHejKjHcY=/fit-in/427x620/static.dafiti.com.br/p/puma-t%25c3%25aanis-puma-anzarun-lite-bold-cinza-7334-1387147-1-product.jpg'\n}]; // function saga responsável por executar em segundo plano\n\nfunction* addToCart({\n  id\n}) {\n  // obtém um book através do ID\n  const book = booksjson.map(book => book.id === id ? book : null); // faz dispatch através de put de redux-saga/effects, responsável pelos efeitos colaterais em redux no react.js\n\n  yield put(addSuccess([book[id - 1]]));\n  yield put(cartAmountUpdateSuccess(id));\n}\n/* ### exporta como padrão com all (que junta todos os sagas de redux) com takeLatest para cada ação de add (adicionar) \r\n** ### quando houver cliques no botão em Home, ou seja, takeLatest ouve os eventos de adiçao de livros e nos cliques no botão\r\n   ### em scripts Home. Você poderá adiconar mais eventos se quiser além desse que está embaixo.\r\n**/\n\n\nexport default all([takeLatest('add', addToCart)]);","map":{"version":3,"sources":["C:/Users/Skip/Desktop/cart-react-app/src/store/sagas.js"],"names":["all","put","select","takeLatest","addSuccess","cartAmountUpdateSuccess","booksjson","id","title","price","img","addToCart","book","map"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,GAAb,EAAkBC,MAAlB,EAA0BC,UAA1B,QAA2C,oBAA3C,C,CAAiE;;AACjE,SAASC,UAAT,EAAqBC,uBAArB,QAAoD,kBAApD,C,CAAwE;;AAExE;AACA;AACA;AAEA;;AACA,MAAMC,SAAS,GAAG,CACd;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,qBAAf;AAAsCC,EAAAA,KAAK,EAAE,KAA7C;AAAoDC,EAAAA,GAAG,EAAE;AAAzD,CADc,EAEd;AAACH,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,6BAAf;AAA8CC,EAAAA,KAAK,EAAE,MAArD;AAA6DC,EAAAA,GAAG,EAAE;AAAlE,CAFc,EAGd;AAACH,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,uBAAf;AAAwCC,EAAAA,KAAK,EAAE,MAA/C;AAAuDC,EAAAA,GAAG,EAAE;AAA5D,CAHc,CAAlB,C,CAMA;;AACA,UAAUC,SAAV,CAAoB;AAACJ,EAAAA;AAAD,CAApB,EAA0B;AACtB;AACA,QAAMK,IAAI,GAAGN,SAAS,CAACO,GAAV,CAAcD,IAAI,IAAKA,IAAI,CAACL,EAAL,KAAYA,EAAb,GAAmBK,IAAnB,GAA0B,IAAhD,CAAb,CAFsB,CAItB;;AACA,QAAMX,GAAG,CAACG,UAAU,CAAC,CAACQ,IAAI,CAACL,EAAE,GAAG,CAAN,CAAL,CAAD,CAAX,CAAT;AACA,QAAMN,GAAG,CAACI,uBAAuB,CAACE,EAAD,CAAxB,CAAT;AACH;AAED;AACA;AACA;AACA;;;AACA,eAAeP,GAAG,CAAC,CACfG,UAAU,CAAC,KAAD,EAAQQ,SAAR,CADK,CAAD,CAAlB","sourcesContent":["import {all, put, select, takeLatest} from 'redux-saga/effects'  // importe de redux-saga/effects\r\nimport { addSuccess, cartAmountUpdateSuccess } from '../store/actions'; // importar de store/actions\r\n\r\n/* ### métodos para redux saga que funcionam por trás dos panos na aplicação aos quais você queira ###\r\n** ### que funcione junto aos componentes como Home, Cart e ShowCart ###\r\n**/\r\n\r\n// representa o BACK-END. Caso queira para a produção, desconsidere esse objeto booksjson caso queira um banco de dados real\r\nconst booksjson = [\r\n    {id: 1, title: 'Bolsa Louis Vuitton', price: 2.676, img: 'https://cdn.upcatalogo.com.br/img/sites/540/2021/02/1-10.jpg'},\r\n    {id: 2, title: 'Camisa Supreme-LouisVuitton', price: 549.99, img: 'https://cdn.awsli.com.br/800x800/1081/1081393/produto/40933337/blusa-moletom-capuz-supreme-hype-swag-branco-peep-trap-rap-f75ccd99.jpg'},\r\n    {id: 3, title: 'Pulma Edição Limitada', price: 365.85, img: 'https://t-static.dafiti.com.br/Lz-z1xUY_UReE9_SKLSHejKjHcY=/fit-in/427x620/static.dafiti.com.br/p/puma-t%25c3%25aanis-puma-anzarun-lite-bold-cinza-7334-1387147-1-product.jpg'}\r\n];\r\n\r\n// function saga responsável por executar em segundo plano\r\nfunction* addToCart({id}) {\r\n    // obtém um book através do ID\r\n    const book = booksjson.map(book => (book.id === id) ? book : null);\r\n\r\n    // faz dispatch através de put de redux-saga/effects, responsável pelos efeitos colaterais em redux no react.js\r\n    yield put(addSuccess([book[id - 1]]));\r\n    yield put(cartAmountUpdateSuccess(id));\r\n}\r\n\r\n/* ### exporta como padrão com all (que junta todos os sagas de redux) com takeLatest para cada ação de add (adicionar) \r\n** ### quando houver cliques no botão em Home, ou seja, takeLatest ouve os eventos de adiçao de livros e nos cliques no botão\r\n   ### em scripts Home. Você poderá adiconar mais eventos se quiser além desse que está embaixo.\r\n**/\r\nexport default all([\r\n    takeLatest('add', addToCart),\r\n]);"]},"metadata":{},"sourceType":"module"}