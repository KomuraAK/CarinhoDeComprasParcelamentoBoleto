{"ast":null,"code":"// essa parte é reponsável pelo funcionamento de redux saga\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer, reducerAmountCart } from './reducer';\nimport rootSaga from './rootSaga'; // cria saga middleware\n\nconst sagaMiddleware = createSagaMiddleware(); // combina reducers com combineReducers para poder usá-los individualmente e também fazê-los funcionar separadamente\n\nconst reducers = combineReducers({\n  clickCart: reducer,\n  clickAmount: reducerAmountCart\n}); // cria loja (store)\n\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware)); // então execute (run) rootSaga em sagaMiddleware\n\nsagaMiddleware.run(rootSaga); // exporta loja (store) ?\n\nexport default store;","map":{"version":3,"sources":["C:/Users/Skip/Desktop/cart-react-app/src/store/main.js"],"names":["createStore","applyMiddleware","combineReducers","createSagaMiddleware","reducer","reducerAmountCart","rootSaga","sagaMiddleware","reducers","clickCart","clickAmount","store","run"],"mappings":"AAAA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAAQC,OAAR,EAAiBC,iBAAjB,QAAyC,WAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C,C,CAGA;;AACA,MAAMK,QAAQ,GAAGN,eAAe,CAAC;AAC/BO,EAAAA,SAAS,EAAEL,OADoB;AAE/BM,EAAAA,WAAW,EAAEL;AAFkB,CAAD,CAAhC,C,CAKA;;AACA,MAAMM,KAAK,GAAGX,WAAW,CACvBQ,QADuB,EAEvBP,eAAe,CAACM,cAAD,CAFQ,CAAzB,C,CAKA;;AACAA,cAAc,CAACK,GAAf,CAAmBN,QAAnB,E,CAEA;;AACA,eAAeK,KAAf","sourcesContent":["// essa parte é reponsável pelo funcionamento de redux saga\r\n\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport {reducer, reducerAmountCart} from './reducer'\r\nimport rootSaga from './rootSaga'\r\n\r\n// cria saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n\r\n// combina reducers com combineReducers para poder usá-los individualmente e também fazê-los funcionar separadamente\r\nconst reducers = combineReducers({\r\n  clickCart: reducer,\r\n  clickAmount: reducerAmountCart,\r\n});\r\n\r\n// cria loja (store)\r\nconst store = createStore(\r\n  reducers,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\n// então execute (run) rootSaga em sagaMiddleware\r\nsagaMiddleware.run(rootSaga)\r\n\r\n// exporta loja (store) ?\r\nexport default store;"]},"metadata":{},"sourceType":"module"}